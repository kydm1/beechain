// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tokennote.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/33cn/chain33/types"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// action
type TokennoteAction struct {
	// Types that are valid to be assigned to Value:
	//	*TokennoteAction_TokennoteCreate
	//	*TokennoteAction_TokennoteLoan
	//	*TokennoteAction_TokennoteLoanedAgree
	//	*TokennoteAction_TokennoteLoanedReject
	//	*TokennoteAction_TokennoteCashed
	//	*TokennoteAction_Transfer
	//	*TokennoteAction_Withdraw
	//	*TokennoteAction_TransferToExec
	//	*TokennoteAction_Genesis
	//	*TokennoteAction_TokennoteMint
	//	*TokennoteAction_TokennoteBurn
	Value                isTokennoteAction_Value `protobuf_oneof:"value"`
	Ty                   int32                   `protobuf:"varint,99,opt,name=Ty,proto3" json:"Ty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TokennoteAction) Reset()         { *m = TokennoteAction{} }
func (m *TokennoteAction) String() string { return proto.CompactTextString(m) }
func (*TokennoteAction) ProtoMessage()    {}
func (*TokennoteAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{0}
}

func (m *TokennoteAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteAction.Unmarshal(m, b)
}
func (m *TokennoteAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteAction.Marshal(b, m, deterministic)
}
func (m *TokennoteAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteAction.Merge(m, src)
}
func (m *TokennoteAction) XXX_Size() int {
	return xxx_messageInfo_TokennoteAction.Size(m)
}
func (m *TokennoteAction) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteAction.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteAction proto.InternalMessageInfo

type isTokennoteAction_Value interface {
	isTokennoteAction_Value()
}

type TokennoteAction_TokennoteCreate struct {
	TokennoteCreate *TokennoteCreate `protobuf:"bytes,1,opt,name=tokennoteCreate,proto3,oneof"`
}

type TokennoteAction_TokennoteLoan struct {
	TokennoteLoan *TokennoteLoan `protobuf:"bytes,2,opt,name=tokennoteLoan,proto3,oneof"`
}

type TokennoteAction_TokennoteLoanedAgree struct {
	TokennoteLoanedAgree *TokennoteLoanedAgree `protobuf:"bytes,3,opt,name=tokennoteLoanedAgree,proto3,oneof"`
}

type TokennoteAction_TokennoteLoanedReject struct {
	TokennoteLoanedReject *TokennoteLoanedReject `protobuf:"bytes,4,opt,name=tokennoteLoanedReject,proto3,oneof"`
}

type TokennoteAction_TokennoteCashed struct {
	TokennoteCashed *TokennoteCashed `protobuf:"bytes,5,opt,name=tokennoteCashed,proto3,oneof"`
}

type TokennoteAction_Transfer struct {
	Transfer *types.AssetsTransfer `protobuf:"bytes,6,opt,name=transfer,proto3,oneof"`
}

type TokennoteAction_Withdraw struct {
	Withdraw *types.AssetsWithdraw `protobuf:"bytes,7,opt,name=withdraw,proto3,oneof"`
}

type TokennoteAction_TransferToExec struct {
	TransferToExec *types.AssetsTransferToExec `protobuf:"bytes,8,opt,name=transferToExec,proto3,oneof"`
}

type TokennoteAction_Genesis struct {
	Genesis *types.AssetsGenesis `protobuf:"bytes,9,opt,name=genesis,proto3,oneof"`
}

type TokennoteAction_TokennoteMint struct {
	TokennoteMint *TokennoteMint `protobuf:"bytes,10,opt,name=tokennoteMint,proto3,oneof"`
}

type TokennoteAction_TokennoteBurn struct {
	TokennoteBurn *TokennoteBurn `protobuf:"bytes,11,opt,name=tokennoteBurn,proto3,oneof"`
}

func (*TokennoteAction_TokennoteCreate) isTokennoteAction_Value() {}

func (*TokennoteAction_TokennoteLoan) isTokennoteAction_Value() {}

func (*TokennoteAction_TokennoteLoanedAgree) isTokennoteAction_Value() {}

func (*TokennoteAction_TokennoteLoanedReject) isTokennoteAction_Value() {}

func (*TokennoteAction_TokennoteCashed) isTokennoteAction_Value() {}

func (*TokennoteAction_Transfer) isTokennoteAction_Value() {}

func (*TokennoteAction_Withdraw) isTokennoteAction_Value() {}

func (*TokennoteAction_TransferToExec) isTokennoteAction_Value() {}

func (*TokennoteAction_Genesis) isTokennoteAction_Value() {}

func (*TokennoteAction_TokennoteMint) isTokennoteAction_Value() {}

func (*TokennoteAction_TokennoteBurn) isTokennoteAction_Value() {}

func (m *TokennoteAction) GetValue() isTokennoteAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TokennoteAction) GetTokennoteCreate() *TokennoteCreate {
	if x, ok := m.GetValue().(*TokennoteAction_TokennoteCreate); ok {
		return x.TokennoteCreate
	}
	return nil
}

func (m *TokennoteAction) GetTokennoteLoan() *TokennoteLoan {
	if x, ok := m.GetValue().(*TokennoteAction_TokennoteLoan); ok {
		return x.TokennoteLoan
	}
	return nil
}

func (m *TokennoteAction) GetTokennoteLoanedAgree() *TokennoteLoanedAgree {
	if x, ok := m.GetValue().(*TokennoteAction_TokennoteLoanedAgree); ok {
		return x.TokennoteLoanedAgree
	}
	return nil
}

func (m *TokennoteAction) GetTokennoteLoanedReject() *TokennoteLoanedReject {
	if x, ok := m.GetValue().(*TokennoteAction_TokennoteLoanedReject); ok {
		return x.TokennoteLoanedReject
	}
	return nil
}

func (m *TokennoteAction) GetTokennoteCashed() *TokennoteCashed {
	if x, ok := m.GetValue().(*TokennoteAction_TokennoteCashed); ok {
		return x.TokennoteCashed
	}
	return nil
}

func (m *TokennoteAction) GetTransfer() *types.AssetsTransfer {
	if x, ok := m.GetValue().(*TokennoteAction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *TokennoteAction) GetWithdraw() *types.AssetsWithdraw {
	if x, ok := m.GetValue().(*TokennoteAction_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (m *TokennoteAction) GetTransferToExec() *types.AssetsTransferToExec {
	if x, ok := m.GetValue().(*TokennoteAction_TransferToExec); ok {
		return x.TransferToExec
	}
	return nil
}

func (m *TokennoteAction) GetGenesis() *types.AssetsGenesis {
	if x, ok := m.GetValue().(*TokennoteAction_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (m *TokennoteAction) GetTokennoteMint() *TokennoteMint {
	if x, ok := m.GetValue().(*TokennoteAction_TokennoteMint); ok {
		return x.TokennoteMint
	}
	return nil
}

func (m *TokennoteAction) GetTokennoteBurn() *TokennoteBurn {
	if x, ok := m.GetValue().(*TokennoteAction_TokennoteBurn); ok {
		return x.TokennoteBurn
	}
	return nil
}

func (m *TokennoteAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TokennoteAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TokennoteAction_OneofMarshaler, _TokennoteAction_OneofUnmarshaler, _TokennoteAction_OneofSizer, []interface{}{
		(*TokennoteAction_TokennoteCreate)(nil),
		(*TokennoteAction_TokennoteLoan)(nil),
		(*TokennoteAction_TokennoteLoanedAgree)(nil),
		(*TokennoteAction_TokennoteLoanedReject)(nil),
		(*TokennoteAction_TokennoteCashed)(nil),
		(*TokennoteAction_Transfer)(nil),
		(*TokennoteAction_Withdraw)(nil),
		(*TokennoteAction_TransferToExec)(nil),
		(*TokennoteAction_Genesis)(nil),
		(*TokennoteAction_TokennoteMint)(nil),
		(*TokennoteAction_TokennoteBurn)(nil),
	}
}

func _TokennoteAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TokennoteAction)
	// value
	switch x := m.Value.(type) {
	case *TokennoteAction_TokennoteCreate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokennoteCreate); err != nil {
			return err
		}
	case *TokennoteAction_TokennoteLoan:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokennoteLoan); err != nil {
			return err
		}
	case *TokennoteAction_TokennoteLoanedAgree:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokennoteLoanedAgree); err != nil {
			return err
		}
	case *TokennoteAction_TokennoteLoanedReject:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokennoteLoanedReject); err != nil {
			return err
		}
	case *TokennoteAction_TokennoteCashed:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokennoteCashed); err != nil {
			return err
		}
	case *TokennoteAction_Transfer:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *TokennoteAction_Withdraw:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Withdraw); err != nil {
			return err
		}
	case *TokennoteAction_TransferToExec:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TransferToExec); err != nil {
			return err
		}
	case *TokennoteAction_Genesis:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Genesis); err != nil {
			return err
		}
	case *TokennoteAction_TokennoteMint:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokennoteMint); err != nil {
			return err
		}
	case *TokennoteAction_TokennoteBurn:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokennoteBurn); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TokennoteAction.Value has unexpected type %T", x)
	}
	return nil
}

func _TokennoteAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TokennoteAction)
	switch tag {
	case 1: // value.tokennoteCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokennoteCreate)
		err := b.DecodeMessage(msg)
		m.Value = &TokennoteAction_TokennoteCreate{msg}
		return true, err
	case 2: // value.tokennoteLoan
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokennoteLoan)
		err := b.DecodeMessage(msg)
		m.Value = &TokennoteAction_TokennoteLoan{msg}
		return true, err
	case 3: // value.tokennoteLoanedAgree
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokennoteLoanedAgree)
		err := b.DecodeMessage(msg)
		m.Value = &TokennoteAction_TokennoteLoanedAgree{msg}
		return true, err
	case 4: // value.tokennoteLoanedReject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokennoteLoanedReject)
		err := b.DecodeMessage(msg)
		m.Value = &TokennoteAction_TokennoteLoanedReject{msg}
		return true, err
	case 5: // value.tokennoteCashed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokennoteCashed)
		err := b.DecodeMessage(msg)
		m.Value = &TokennoteAction_TokennoteCashed{msg}
		return true, err
	case 6: // value.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(types.AssetsTransfer)
		err := b.DecodeMessage(msg)
		m.Value = &TokennoteAction_Transfer{msg}
		return true, err
	case 7: // value.withdraw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(types.AssetsWithdraw)
		err := b.DecodeMessage(msg)
		m.Value = &TokennoteAction_Withdraw{msg}
		return true, err
	case 8: // value.transferToExec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(types.AssetsTransferToExec)
		err := b.DecodeMessage(msg)
		m.Value = &TokennoteAction_TransferToExec{msg}
		return true, err
	case 9: // value.genesis
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(types.AssetsGenesis)
		err := b.DecodeMessage(msg)
		m.Value = &TokennoteAction_Genesis{msg}
		return true, err
	case 10: // value.tokennoteMint
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokennoteMint)
		err := b.DecodeMessage(msg)
		m.Value = &TokennoteAction_TokennoteMint{msg}
		return true, err
	case 11: // value.tokennoteBurn
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokennoteBurn)
		err := b.DecodeMessage(msg)
		m.Value = &TokennoteAction_TokennoteBurn{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TokennoteAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TokennoteAction)
	// value
	switch x := m.Value.(type) {
	case *TokennoteAction_TokennoteCreate:
		s := proto.Size(x.TokennoteCreate)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokennoteAction_TokennoteLoan:
		s := proto.Size(x.TokennoteLoan)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokennoteAction_TokennoteLoanedAgree:
		s := proto.Size(x.TokennoteLoanedAgree)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokennoteAction_TokennoteLoanedReject:
		s := proto.Size(x.TokennoteLoanedReject)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokennoteAction_TokennoteCashed:
		s := proto.Size(x.TokennoteCashed)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokennoteAction_Transfer:
		s := proto.Size(x.Transfer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokennoteAction_Withdraw:
		s := proto.Size(x.Withdraw)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokennoteAction_TransferToExec:
		s := proto.Size(x.TransferToExec)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokennoteAction_Genesis:
		s := proto.Size(x.Genesis)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokennoteAction_TokennoteMint:
		s := proto.Size(x.TokennoteMint)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TokennoteAction_TokennoteBurn:
		s := proto.Size(x.TokennoteBurn)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

//创建token，支持最大精确度是8位小数,即存入数据库的实际总额需要放大1e8倍
type TokennoteCreate struct {
	Issuer               string   `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	IssuerName           string   `protobuf:"bytes,2,opt,name=issuerName,proto3" json:"issuerName,omitempty"`
	IssuerPhone          string   `protobuf:"bytes,3,opt,name=issuerPhone,proto3" json:"issuerPhone,omitempty"`
	IssuerId             string   `protobuf:"bytes,4,opt,name=issuerId,proto3" json:"issuerId,omitempty"`
	Acceptor             string   `protobuf:"bytes,5,opt,name=acceptor,proto3" json:"acceptor,omitempty"`
	Balance              int64    `protobuf:"varint,6,opt,name=balance,proto3" json:"balance,omitempty"`
	Currency             string   `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	AcceptanceDate       int64    `protobuf:"varint,8,opt,name=acceptanceDate,proto3" json:"acceptanceDate,omitempty"`
	Rate                 int64    `protobuf:"varint,9,opt,name=rate,proto3" json:"rate,omitempty"`
	Introduction         string   `protobuf:"bytes,10,opt,name=introduction,proto3" json:"introduction,omitempty"`
	Repayamount          int64    `protobuf:"varint,11,opt,name=repayamount,proto3" json:"repayamount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteCreate) Reset()         { *m = TokennoteCreate{} }
func (m *TokennoteCreate) String() string { return proto.CompactTextString(m) }
func (*TokennoteCreate) ProtoMessage()    {}
func (*TokennoteCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{1}
}

func (m *TokennoteCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteCreate.Unmarshal(m, b)
}
func (m *TokennoteCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteCreate.Marshal(b, m, deterministic)
}
func (m *TokennoteCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteCreate.Merge(m, src)
}
func (m *TokennoteCreate) XXX_Size() int {
	return xxx_messageInfo_TokennoteCreate.Size(m)
}
func (m *TokennoteCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteCreate.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteCreate proto.InternalMessageInfo

func (m *TokennoteCreate) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *TokennoteCreate) GetIssuerName() string {
	if m != nil {
		return m.IssuerName
	}
	return ""
}

func (m *TokennoteCreate) GetIssuerPhone() string {
	if m != nil {
		return m.IssuerPhone
	}
	return ""
}

func (m *TokennoteCreate) GetIssuerId() string {
	if m != nil {
		return m.IssuerId
	}
	return ""
}

func (m *TokennoteCreate) GetAcceptor() string {
	if m != nil {
		return m.Acceptor
	}
	return ""
}

func (m *TokennoteCreate) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *TokennoteCreate) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *TokennoteCreate) GetAcceptanceDate() int64 {
	if m != nil {
		return m.AcceptanceDate
	}
	return 0
}

func (m *TokennoteCreate) GetRate() int64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *TokennoteCreate) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *TokennoteCreate) GetRepayamount() int64 {
	if m != nil {
		return m.Repayamount
	}
	return 0
}

type TokennoteLoanedReject struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	LoanTime             int64    `protobuf:"varint,3,opt,name=loanTime,proto3" json:"loanTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteLoanedReject) Reset()         { *m = TokennoteLoanedReject{} }
func (m *TokennoteLoanedReject) String() string { return proto.CompactTextString(m) }
func (*TokennoteLoanedReject) ProtoMessage()    {}
func (*TokennoteLoanedReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{2}
}

func (m *TokennoteLoanedReject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteLoanedReject.Unmarshal(m, b)
}
func (m *TokennoteLoanedReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteLoanedReject.Marshal(b, m, deterministic)
}
func (m *TokennoteLoanedReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteLoanedReject.Merge(m, src)
}
func (m *TokennoteLoanedReject) XXX_Size() int {
	return xxx_messageInfo_TokennoteLoanedReject.Size(m)
}
func (m *TokennoteLoanedReject) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteLoanedReject.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteLoanedReject proto.InternalMessageInfo

func (m *TokennoteLoanedReject) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokennoteLoanedReject) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *TokennoteLoanedReject) GetLoanTime() int64 {
	if m != nil {
		return m.LoanTime
	}
	return 0
}

type TokennoteLoan struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteLoan) Reset()         { *m = TokennoteLoan{} }
func (m *TokennoteLoan) String() string { return proto.CompactTextString(m) }
func (*TokennoteLoan) ProtoMessage()    {}
func (*TokennoteLoan) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{3}
}

func (m *TokennoteLoan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteLoan.Unmarshal(m, b)
}
func (m *TokennoteLoan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteLoan.Marshal(b, m, deterministic)
}
func (m *TokennoteLoan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteLoan.Merge(m, src)
}
func (m *TokennoteLoan) XXX_Size() int {
	return xxx_messageInfo_TokennoteLoan.Size(m)
}
func (m *TokennoteLoan) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteLoan.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteLoan proto.InternalMessageInfo

func (m *TokennoteLoan) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokennoteLoan) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TokennoteLoan) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type TokennoteLoanedAgree struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Loantime             int64    `protobuf:"varint,3,opt,name=loantime,proto3" json:"loantime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteLoanedAgree) Reset()         { *m = TokennoteLoanedAgree{} }
func (m *TokennoteLoanedAgree) String() string { return proto.CompactTextString(m) }
func (*TokennoteLoanedAgree) ProtoMessage()    {}
func (*TokennoteLoanedAgree) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{4}
}

func (m *TokennoteLoanedAgree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteLoanedAgree.Unmarshal(m, b)
}
func (m *TokennoteLoanedAgree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteLoanedAgree.Marshal(b, m, deterministic)
}
func (m *TokennoteLoanedAgree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteLoanedAgree.Merge(m, src)
}
func (m *TokennoteLoanedAgree) XXX_Size() int {
	return xxx_messageInfo_TokennoteLoanedAgree.Size(m)
}
func (m *TokennoteLoanedAgree) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteLoanedAgree.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteLoanedAgree proto.InternalMessageInfo

func (m *TokennoteLoanedAgree) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokennoteLoanedAgree) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *TokennoteLoanedAgree) GetLoantime() int64 {
	if m != nil {
		return m.Loantime
	}
	return 0
}

type TokennoteCashed struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Cash                 int64    `protobuf:"varint,2,opt,name=cash,proto3" json:"cash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteCashed) Reset()         { *m = TokennoteCashed{} }
func (m *TokennoteCashed) String() string { return proto.CompactTextString(m) }
func (*TokennoteCashed) ProtoMessage()    {}
func (*TokennoteCashed) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{5}
}

func (m *TokennoteCashed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteCashed.Unmarshal(m, b)
}
func (m *TokennoteCashed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteCashed.Marshal(b, m, deterministic)
}
func (m *TokennoteCashed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteCashed.Merge(m, src)
}
func (m *TokennoteCashed) XXX_Size() int {
	return xxx_messageInfo_TokennoteCashed.Size(m)
}
func (m *TokennoteCashed) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteCashed.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteCashed proto.InternalMessageInfo

func (m *TokennoteCashed) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokennoteCashed) GetCash() int64 {
	if m != nil {
		return m.Cash
	}
	return 0
}

type TokennoteMint struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteMint) Reset()         { *m = TokennoteMint{} }
func (m *TokennoteMint) String() string { return proto.CompactTextString(m) }
func (*TokennoteMint) ProtoMessage()    {}
func (*TokennoteMint) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{6}
}

func (m *TokennoteMint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteMint.Unmarshal(m, b)
}
func (m *TokennoteMint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteMint.Marshal(b, m, deterministic)
}
func (m *TokennoteMint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteMint.Merge(m, src)
}
func (m *TokennoteMint) XXX_Size() int {
	return xxx_messageInfo_TokennoteMint.Size(m)
}
func (m *TokennoteMint) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteMint.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteMint proto.InternalMessageInfo

func (m *TokennoteMint) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokennoteMint) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type TokennoteBurn struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteBurn) Reset()         { *m = TokennoteBurn{} }
func (m *TokennoteBurn) String() string { return proto.CompactTextString(m) }
func (*TokennoteBurn) ProtoMessage()    {}
func (*TokennoteBurn) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{7}
}

func (m *TokennoteBurn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteBurn.Unmarshal(m, b)
}
func (m *TokennoteBurn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteBurn.Marshal(b, m, deterministic)
}
func (m *TokennoteBurn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteBurn.Merge(m, src)
}
func (m *TokennoteBurn) XXX_Size() int {
	return xxx_messageInfo_TokennoteBurn.Size(m)
}
func (m *TokennoteBurn) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteBurn.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteBurn proto.InternalMessageInfo

func (m *TokennoteBurn) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokennoteBurn) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// state db
type Tokennote struct {
	Issuer               string           `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Acceptor             string           `protobuf:"bytes,2,opt,name=acceptor,proto3" json:"acceptor,omitempty"`
	Total                int64            `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Balance              int64            `protobuf:"varint,4,opt,name=balance,proto3" json:"balance,omitempty"`
	Repayamount          int64            `protobuf:"varint,5,opt,name=repayamount,proto3" json:"repayamount,omitempty"`
	Currency             string           `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	AcceptanceDate       int64            `protobuf:"varint,7,opt,name=acceptanceDate,proto3" json:"acceptanceDate,omitempty"`
	Rate                 int64            `protobuf:"varint,8,opt,name=rate,proto3" json:"rate,omitempty"`
	IssuerName           string           `protobuf:"bytes,9,opt,name=issuerName,proto3" json:"issuerName,omitempty"`
	IssuerPhone          string           `protobuf:"bytes,10,opt,name=issuerPhone,proto3" json:"issuerPhone,omitempty"`
	IssuerId             string           `protobuf:"bytes,11,opt,name=issuerId,proto3" json:"issuerId,omitempty"`
	Introduction         string           `protobuf:"bytes,12,opt,name=introduction,proto3" json:"introduction,omitempty"`
	Status               int32            `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`
	Holds                []*TokennoteHold `protobuf:"bytes,14,rep,name=holds,proto3" json:"holds,omitempty"`
	CreateTime           int64            `protobuf:"varint,15,opt,name=createTime,proto3" json:"createTime,omitempty"`
	OverdueRate          int64            `protobuf:"varint,16,opt,name=overdueRate,proto3" json:"overdueRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Tokennote) Reset()         { *m = Tokennote{} }
func (m *Tokennote) String() string { return proto.CompactTextString(m) }
func (*Tokennote) ProtoMessage()    {}
func (*Tokennote) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{8}
}

func (m *Tokennote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tokennote.Unmarshal(m, b)
}
func (m *Tokennote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tokennote.Marshal(b, m, deterministic)
}
func (m *Tokennote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tokennote.Merge(m, src)
}
func (m *Tokennote) XXX_Size() int {
	return xxx_messageInfo_Tokennote.Size(m)
}
func (m *Tokennote) XXX_DiscardUnknown() {
	xxx_messageInfo_Tokennote.DiscardUnknown(m)
}

var xxx_messageInfo_Tokennote proto.InternalMessageInfo

func (m *Tokennote) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *Tokennote) GetAcceptor() string {
	if m != nil {
		return m.Acceptor
	}
	return ""
}

func (m *Tokennote) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Tokennote) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Tokennote) GetRepayamount() int64 {
	if m != nil {
		return m.Repayamount
	}
	return 0
}

func (m *Tokennote) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Tokennote) GetAcceptanceDate() int64 {
	if m != nil {
		return m.AcceptanceDate
	}
	return 0
}

func (m *Tokennote) GetRate() int64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Tokennote) GetIssuerName() string {
	if m != nil {
		return m.IssuerName
	}
	return ""
}

func (m *Tokennote) GetIssuerPhone() string {
	if m != nil {
		return m.IssuerPhone
	}
	return ""
}

func (m *Tokennote) GetIssuerId() string {
	if m != nil {
		return m.IssuerId
	}
	return ""
}

func (m *Tokennote) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *Tokennote) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Tokennote) GetHolds() []*TokennoteHold {
	if m != nil {
		return m.Holds
	}
	return nil
}

func (m *Tokennote) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Tokennote) GetOverdueRate() int64 {
	if m != nil {
		return m.OverdueRate
	}
	return 0
}

type TokennoteHold struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Repayamount          int64    `protobuf:"varint,4,opt,name=repayamount,proto3" json:"repayamount,omitempty"`
	LoanTime             int64    `protobuf:"varint,5,opt,name=loanTime,proto3" json:"loanTime,omitempty"`
	Status               int32    `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Creator              string   `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteHold) Reset()         { *m = TokennoteHold{} }
func (m *TokennoteHold) String() string { return proto.CompactTextString(m) }
func (*TokennoteHold) ProtoMessage()    {}
func (*TokennoteHold) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{9}
}

func (m *TokennoteHold) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteHold.Unmarshal(m, b)
}
func (m *TokennoteHold) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteHold.Marshal(b, m, deterministic)
}
func (m *TokennoteHold) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteHold.Merge(m, src)
}
func (m *TokennoteHold) XXX_Size() int {
	return xxx_messageInfo_TokennoteHold.Size(m)
}
func (m *TokennoteHold) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteHold.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteHold proto.InternalMessageInfo

func (m *TokennoteHold) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *TokennoteHold) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *TokennoteHold) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TokennoteHold) GetRepayamount() int64 {
	if m != nil {
		return m.Repayamount
	}
	return 0
}

func (m *TokennoteHold) GetLoanTime() int64 {
	if m != nil {
		return m.LoanTime
	}
	return 0
}

func (m *TokennoteHold) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TokennoteHold) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

// log
type ReceiptTokennote struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiptTokennote) Reset()         { *m = ReceiptTokennote{} }
func (m *ReceiptTokennote) String() string { return proto.CompactTextString(m) }
func (*ReceiptTokennote) ProtoMessage()    {}
func (*ReceiptTokennote) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{10}
}

func (m *ReceiptTokennote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptTokennote.Unmarshal(m, b)
}
func (m *ReceiptTokennote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptTokennote.Marshal(b, m, deterministic)
}
func (m *ReceiptTokennote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptTokennote.Merge(m, src)
}
func (m *ReceiptTokennote) XXX_Size() int {
	return xxx_messageInfo_ReceiptTokennote.Size(m)
}
func (m *ReceiptTokennote) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptTokennote.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptTokennote proto.InternalMessageInfo

func (m *ReceiptTokennote) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ReceiptTokennote) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReceiptTokennote) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReceiptTokennoteCashed struct {
	Cashlist             []*TokennoteCashDetail `protobuf:"bytes,1,rep,name=cashlist,proto3" json:"cashlist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ReceiptTokennoteCashed) Reset()         { *m = ReceiptTokennoteCashed{} }
func (m *ReceiptTokennoteCashed) String() string { return proto.CompactTextString(m) }
func (*ReceiptTokennoteCashed) ProtoMessage()    {}
func (*ReceiptTokennoteCashed) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{11}
}

func (m *ReceiptTokennoteCashed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptTokennoteCashed.Unmarshal(m, b)
}
func (m *ReceiptTokennoteCashed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptTokennoteCashed.Marshal(b, m, deterministic)
}
func (m *ReceiptTokennoteCashed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptTokennoteCashed.Merge(m, src)
}
func (m *ReceiptTokennoteCashed) XXX_Size() int {
	return xxx_messageInfo_ReceiptTokennoteCashed.Size(m)
}
func (m *ReceiptTokennoteCashed) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptTokennoteCashed.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptTokennoteCashed proto.InternalMessageInfo

func (m *ReceiptTokennoteCashed) GetCashlist() []*TokennoteCashDetail {
	if m != nil {
		return m.Cashlist
	}
	return nil
}

type TokennoteCashDetail struct {
	Currency             string   `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Height               int64    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Time                 int64    `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
	Index                int64    `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteCashDetail) Reset()         { *m = TokennoteCashDetail{} }
func (m *TokennoteCashDetail) String() string { return proto.CompactTextString(m) }
func (*TokennoteCashDetail) ProtoMessage()    {}
func (*TokennoteCashDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{12}
}

func (m *TokennoteCashDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteCashDetail.Unmarshal(m, b)
}
func (m *TokennoteCashDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteCashDetail.Marshal(b, m, deterministic)
}
func (m *TokennoteCashDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteCashDetail.Merge(m, src)
}
func (m *TokennoteCashDetail) XXX_Size() int {
	return xxx_messageInfo_TokennoteCashDetail.Size(m)
}
func (m *TokennoteCashDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteCashDetail.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteCashDetail proto.InternalMessageInfo

func (m *TokennoteCashDetail) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *TokennoteCashDetail) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *TokennoteCashDetail) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TokennoteCashDetail) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TokennoteCashDetail) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *TokennoteCashDetail) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

// local
type LocalTokennote struct {
	Issuer               string   `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Acceptor             string   `protobuf:"bytes,2,opt,name=acceptor,proto3" json:"acceptor,omitempty"`
	Total                int64    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Balance              int64    `protobuf:"varint,4,opt,name=balance,proto3" json:"balance,omitempty"`
	Currency             string   `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	AcceptanceDate       int64    `protobuf:"varint,6,opt,name=acceptanceDate,proto3" json:"acceptanceDate,omitempty"`
	Rate                 int64    `protobuf:"varint,7,opt,name=rate,proto3" json:"rate,omitempty"`
	IssuerName           string   `protobuf:"bytes,8,opt,name=issuerName,proto3" json:"issuerName,omitempty"`
	IssuerPhone          string   `protobuf:"bytes,9,opt,name=issuerPhone,proto3" json:"issuerPhone,omitempty"`
	IssuerId             string   `protobuf:"bytes,10,opt,name=issuerId,proto3" json:"issuerId,omitempty"`
	Introduction         string   `protobuf:"bytes,11,opt,name=introduction,proto3" json:"introduction,omitempty"`
	Status               int32    `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	CreatedHeight        int64    `protobuf:"varint,13,opt,name=createdHeight,proto3" json:"createdHeight,omitempty"`
	CreatedTime          int64    `protobuf:"varint,14,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	OverdueRate          int64    `protobuf:"varint,15,opt,name=overdueRate,proto3" json:"overdueRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocalTokennote) Reset()         { *m = LocalTokennote{} }
func (m *LocalTokennote) String() string { return proto.CompactTextString(m) }
func (*LocalTokennote) ProtoMessage()    {}
func (*LocalTokennote) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{13}
}

func (m *LocalTokennote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalTokennote.Unmarshal(m, b)
}
func (m *LocalTokennote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalTokennote.Marshal(b, m, deterministic)
}
func (m *LocalTokennote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalTokennote.Merge(m, src)
}
func (m *LocalTokennote) XXX_Size() int {
	return xxx_messageInfo_LocalTokennote.Size(m)
}
func (m *LocalTokennote) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalTokennote.DiscardUnknown(m)
}

var xxx_messageInfo_LocalTokennote proto.InternalMessageInfo

func (m *LocalTokennote) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *LocalTokennote) GetAcceptor() string {
	if m != nil {
		return m.Acceptor
	}
	return ""
}

func (m *LocalTokennote) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *LocalTokennote) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *LocalTokennote) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *LocalTokennote) GetAcceptanceDate() int64 {
	if m != nil {
		return m.AcceptanceDate
	}
	return 0
}

func (m *LocalTokennote) GetRate() int64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *LocalTokennote) GetIssuerName() string {
	if m != nil {
		return m.IssuerName
	}
	return ""
}

func (m *LocalTokennote) GetIssuerPhone() string {
	if m != nil {
		return m.IssuerPhone
	}
	return ""
}

func (m *LocalTokennote) GetIssuerId() string {
	if m != nil {
		return m.IssuerId
	}
	return ""
}

func (m *LocalTokennote) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *LocalTokennote) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *LocalTokennote) GetCreatedHeight() int64 {
	if m != nil {
		return m.CreatedHeight
	}
	return 0
}

func (m *LocalTokennote) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *LocalTokennote) GetOverdueRate() int64 {
	if m != nil {
		return m.OverdueRate
	}
	return 0
}

// query
type ReqTokennotes struct {
	QueryAll             bool     `protobuf:"varint,1,opt,name=queryAll,proto3" json:"queryAll,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Tokennotes           []string `protobuf:"bytes,3,rep,name=tokennotes,proto3" json:"tokennotes,omitempty"`
	SymbolOnly           bool     `protobuf:"varint,4,opt,name=symbolOnly,proto3" json:"symbolOnly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqTokennotes) Reset()         { *m = ReqTokennotes{} }
func (m *ReqTokennotes) String() string { return proto.CompactTextString(m) }
func (*ReqTokennotes) ProtoMessage()    {}
func (*ReqTokennotes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{14}
}

func (m *ReqTokennotes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTokennotes.Unmarshal(m, b)
}
func (m *ReqTokennotes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTokennotes.Marshal(b, m, deterministic)
}
func (m *ReqTokennotes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTokennotes.Merge(m, src)
}
func (m *ReqTokennotes) XXX_Size() int {
	return xxx_messageInfo_ReqTokennotes.Size(m)
}
func (m *ReqTokennotes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTokennotes.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTokennotes proto.InternalMessageInfo

func (m *ReqTokennotes) GetQueryAll() bool {
	if m != nil {
		return m.QueryAll
	}
	return false
}

func (m *ReqTokennotes) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReqTokennotes) GetTokennotes() []string {
	if m != nil {
		return m.Tokennotes
	}
	return nil
}

func (m *ReqTokennotes) GetSymbolOnly() bool {
	if m != nil {
		return m.SymbolOnly
	}
	return false
}

type ReplyTokennotes struct {
	Tokens               []*LocalTokennote `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReplyTokennotes) Reset()         { *m = ReplyTokennotes{} }
func (m *ReplyTokennotes) String() string { return proto.CompactTextString(m) }
func (*ReplyTokennotes) ProtoMessage()    {}
func (*ReplyTokennotes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{15}
}

func (m *ReplyTokennotes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyTokennotes.Unmarshal(m, b)
}
func (m *ReplyTokennotes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyTokennotes.Marshal(b, m, deterministic)
}
func (m *ReplyTokennotes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyTokennotes.Merge(m, src)
}
func (m *ReplyTokennotes) XXX_Size() int {
	return xxx_messageInfo_ReplyTokennotes.Size(m)
}
func (m *ReplyTokennotes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyTokennotes.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyTokennotes proto.InternalMessageInfo

func (m *ReplyTokennotes) GetTokens() []*LocalTokennote {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type TokennoteRecv struct {
	Tokennote            string   `protobuf:"bytes,1,opt,name=tokennote,proto3" json:"tokennote,omitempty"`
	Recv                 int64    `protobuf:"varint,2,opt,name=recv,proto3" json:"recv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteRecv) Reset()         { *m = TokennoteRecv{} }
func (m *TokennoteRecv) String() string { return proto.CompactTextString(m) }
func (*TokennoteRecv) ProtoMessage()    {}
func (*TokennoteRecv) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{16}
}

func (m *TokennoteRecv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteRecv.Unmarshal(m, b)
}
func (m *TokennoteRecv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteRecv.Marshal(b, m, deterministic)
}
func (m *TokennoteRecv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteRecv.Merge(m, src)
}
func (m *TokennoteRecv) XXX_Size() int {
	return xxx_messageInfo_TokennoteRecv.Size(m)
}
func (m *TokennoteRecv) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteRecv.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteRecv proto.InternalMessageInfo

func (m *TokennoteRecv) GetTokennote() string {
	if m != nil {
		return m.Tokennote
	}
	return ""
}

func (m *TokennoteRecv) GetRecv() int64 {
	if m != nil {
		return m.Recv
	}
	return 0
}

type ReplyAddrRecvForTokennotes struct {
	TokennoteRecvs       []*TokennoteRecv `protobuf:"bytes,1,rep,name=tokennoteRecvs,proto3" json:"tokennoteRecvs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReplyAddrRecvForTokennotes) Reset()         { *m = ReplyAddrRecvForTokennotes{} }
func (m *ReplyAddrRecvForTokennotes) String() string { return proto.CompactTextString(m) }
func (*ReplyAddrRecvForTokennotes) ProtoMessage()    {}
func (*ReplyAddrRecvForTokennotes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{17}
}

func (m *ReplyAddrRecvForTokennotes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyAddrRecvForTokennotes.Unmarshal(m, b)
}
func (m *ReplyAddrRecvForTokennotes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyAddrRecvForTokennotes.Marshal(b, m, deterministic)
}
func (m *ReplyAddrRecvForTokennotes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyAddrRecvForTokennotes.Merge(m, src)
}
func (m *ReplyAddrRecvForTokennotes) XXX_Size() int {
	return xxx_messageInfo_ReplyAddrRecvForTokennotes.Size(m)
}
func (m *ReplyAddrRecvForTokennotes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyAddrRecvForTokennotes.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyAddrRecvForTokennotes proto.InternalMessageInfo

func (m *ReplyAddrRecvForTokennotes) GetTokennoteRecvs() []*TokennoteRecv {
	if m != nil {
		return m.TokennoteRecvs
	}
	return nil
}

type ReqTokennoteBalance struct {
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	TokennoteSymbol      string   `protobuf:"bytes,2,opt,name=tokennoteSymbol,proto3" json:"tokennoteSymbol,omitempty"`
	Execer               string   `protobuf:"bytes,3,opt,name=execer,proto3" json:"execer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqTokennoteBalance) Reset()         { *m = ReqTokennoteBalance{} }
func (m *ReqTokennoteBalance) String() string { return proto.CompactTextString(m) }
func (*ReqTokennoteBalance) ProtoMessage()    {}
func (*ReqTokennoteBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{18}
}

func (m *ReqTokennoteBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTokennoteBalance.Unmarshal(m, b)
}
func (m *ReqTokennoteBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTokennoteBalance.Marshal(b, m, deterministic)
}
func (m *ReqTokennoteBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTokennoteBalance.Merge(m, src)
}
func (m *ReqTokennoteBalance) XXX_Size() int {
	return xxx_messageInfo_ReqTokennoteBalance.Size(m)
}
func (m *ReqTokennoteBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTokennoteBalance.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTokennoteBalance proto.InternalMessageInfo

func (m *ReqTokennoteBalance) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *ReqTokennoteBalance) GetTokennoteSymbol() string {
	if m != nil {
		return m.TokennoteSymbol
	}
	return ""
}

func (m *ReqTokennoteBalance) GetExecer() string {
	if m != nil {
		return m.Execer
	}
	return ""
}

type ReqAccountTokennoteAssets struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Execer               string   `protobuf:"bytes,2,opt,name=execer,proto3" json:"execer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqAccountTokennoteAssets) Reset()         { *m = ReqAccountTokennoteAssets{} }
func (m *ReqAccountTokennoteAssets) String() string { return proto.CompactTextString(m) }
func (*ReqAccountTokennoteAssets) ProtoMessage()    {}
func (*ReqAccountTokennoteAssets) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{19}
}

func (m *ReqAccountTokennoteAssets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqAccountTokennoteAssets.Unmarshal(m, b)
}
func (m *ReqAccountTokennoteAssets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqAccountTokennoteAssets.Marshal(b, m, deterministic)
}
func (m *ReqAccountTokennoteAssets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqAccountTokennoteAssets.Merge(m, src)
}
func (m *ReqAccountTokennoteAssets) XXX_Size() int {
	return xxx_messageInfo_ReqAccountTokennoteAssets.Size(m)
}
func (m *ReqAccountTokennoteAssets) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqAccountTokennoteAssets.DiscardUnknown(m)
}

var xxx_messageInfo_ReqAccountTokennoteAssets proto.InternalMessageInfo

func (m *ReqAccountTokennoteAssets) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ReqAccountTokennoteAssets) GetExecer() string {
	if m != nil {
		return m.Execer
	}
	return ""
}

type TokennoteAsset struct {
	Symbol               string         `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Creator              string         `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Account              *types.Account `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	SingleAmount         int64          `protobuf:"varint,4,opt,name=singleAmount,proto3" json:"singleAmount,omitempty"`
	Repay                int64          `protobuf:"varint,5,opt,name=repay,proto3" json:"repay,omitempty"`
	AcceptanceDate       int64          `protobuf:"varint,6,opt,name=acceptanceDate,proto3" json:"acceptanceDate,omitempty"`
	IssuerName           string         `protobuf:"bytes,7,opt,name=issuerName,proto3" json:"issuerName,omitempty"`
	IssuerPhone          string         `protobuf:"bytes,8,opt,name=issuerPhone,proto3" json:"issuerPhone,omitempty"`
	LoanTime             int64          `protobuf:"varint,9,opt,name=loanTime,proto3" json:"loanTime,omitempty"`
	Status               int32          `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TokennoteAsset) Reset()         { *m = TokennoteAsset{} }
func (m *TokennoteAsset) String() string { return proto.CompactTextString(m) }
func (*TokennoteAsset) ProtoMessage()    {}
func (*TokennoteAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{20}
}

func (m *TokennoteAsset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteAsset.Unmarshal(m, b)
}
func (m *TokennoteAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteAsset.Marshal(b, m, deterministic)
}
func (m *TokennoteAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteAsset.Merge(m, src)
}
func (m *TokennoteAsset) XXX_Size() int {
	return xxx_messageInfo_TokennoteAsset.Size(m)
}
func (m *TokennoteAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteAsset.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteAsset proto.InternalMessageInfo

func (m *TokennoteAsset) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokennoteAsset) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *TokennoteAsset) GetAccount() *types.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *TokennoteAsset) GetSingleAmount() int64 {
	if m != nil {
		return m.SingleAmount
	}
	return 0
}

func (m *TokennoteAsset) GetRepay() int64 {
	if m != nil {
		return m.Repay
	}
	return 0
}

func (m *TokennoteAsset) GetAcceptanceDate() int64 {
	if m != nil {
		return m.AcceptanceDate
	}
	return 0
}

func (m *TokennoteAsset) GetIssuerName() string {
	if m != nil {
		return m.IssuerName
	}
	return ""
}

func (m *TokennoteAsset) GetIssuerPhone() string {
	if m != nil {
		return m.IssuerPhone
	}
	return ""
}

func (m *TokennoteAsset) GetLoanTime() int64 {
	if m != nil {
		return m.LoanTime
	}
	return 0
}

func (m *TokennoteAsset) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReplyAccountTokennoteAssets struct {
	TokennoteAssets      []*TokennoteAsset `protobuf:"bytes,1,rep,name=tokennoteAssets,proto3" json:"tokennoteAssets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReplyAccountTokennoteAssets) Reset()         { *m = ReplyAccountTokennoteAssets{} }
func (m *ReplyAccountTokennoteAssets) String() string { return proto.CompactTextString(m) }
func (*ReplyAccountTokennoteAssets) ProtoMessage()    {}
func (*ReplyAccountTokennoteAssets) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{21}
}

func (m *ReplyAccountTokennoteAssets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyAccountTokennoteAssets.Unmarshal(m, b)
}
func (m *ReplyAccountTokennoteAssets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyAccountTokennoteAssets.Marshal(b, m, deterministic)
}
func (m *ReplyAccountTokennoteAssets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyAccountTokennoteAssets.Merge(m, src)
}
func (m *ReplyAccountTokennoteAssets) XXX_Size() int {
	return xxx_messageInfo_ReplyAccountTokennoteAssets.Size(m)
}
func (m *ReplyAccountTokennoteAssets) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyAccountTokennoteAssets.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyAccountTokennoteAssets proto.InternalMessageInfo

func (m *ReplyAccountTokennoteAssets) GetTokennoteAssets() []*TokennoteAsset {
	if m != nil {
		return m.TokennoteAssets
	}
	return nil
}

type ReplyAccountTokennoteList struct {
	List                 []*TokennoteAddrTime `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReplyAccountTokennoteList) Reset()         { *m = ReplyAccountTokennoteList{} }
func (m *ReplyAccountTokennoteList) String() string { return proto.CompactTextString(m) }
func (*ReplyAccountTokennoteList) ProtoMessage()    {}
func (*ReplyAccountTokennoteList) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{22}
}

func (m *ReplyAccountTokennoteList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyAccountTokennoteList.Unmarshal(m, b)
}
func (m *ReplyAccountTokennoteList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyAccountTokennoteList.Marshal(b, m, deterministic)
}
func (m *ReplyAccountTokennoteList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyAccountTokennoteList.Merge(m, src)
}
func (m *ReplyAccountTokennoteList) XXX_Size() int {
	return xxx_messageInfo_ReplyAccountTokennoteList.Size(m)
}
func (m *ReplyAccountTokennoteList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyAccountTokennoteList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyAccountTokennoteList proto.InternalMessageInfo

func (m *ReplyAccountTokennoteList) GetList() []*TokennoteAddrTime {
	if m != nil {
		return m.List
	}
	return nil
}

//用户还款记录
type ReplyTxTokennoteCashedList struct {
	List                 []*TokennoteCashedTx `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReplyTxTokennoteCashedList) Reset()         { *m = ReplyTxTokennoteCashedList{} }
func (m *ReplyTxTokennoteCashedList) String() string { return proto.CompactTextString(m) }
func (*ReplyTxTokennoteCashedList) ProtoMessage()    {}
func (*ReplyTxTokennoteCashedList) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{23}
}

func (m *ReplyTxTokennoteCashedList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyTxTokennoteCashedList.Unmarshal(m, b)
}
func (m *ReplyTxTokennoteCashedList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyTxTokennoteCashedList.Marshal(b, m, deterministic)
}
func (m *ReplyTxTokennoteCashedList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyTxTokennoteCashedList.Merge(m, src)
}
func (m *ReplyTxTokennoteCashedList) XXX_Size() int {
	return xxx_messageInfo_ReplyTxTokennoteCashedList.Size(m)
}
func (m *ReplyTxTokennoteCashedList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyTxTokennoteCashedList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyTxTokennoteCashedList proto.InternalMessageInfo

func (m *ReplyTxTokennoteCashedList) GetList() []*TokennoteCashedTx {
	if m != nil {
		return m.List
	}
	return nil
}

//用户还款详情记录
type ReplyTxTokennoteCashedDetail struct {
	Detail               *Tokennote `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReplyTxTokennoteCashedDetail) Reset()         { *m = ReplyTxTokennoteCashedDetail{} }
func (m *ReplyTxTokennoteCashedDetail) String() string { return proto.CompactTextString(m) }
func (*ReplyTxTokennoteCashedDetail) ProtoMessage()    {}
func (*ReplyTxTokennoteCashedDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{24}
}

func (m *ReplyTxTokennoteCashedDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyTxTokennoteCashedDetail.Unmarshal(m, b)
}
func (m *ReplyTxTokennoteCashedDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyTxTokennoteCashedDetail.Marshal(b, m, deterministic)
}
func (m *ReplyTxTokennoteCashedDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyTxTokennoteCashedDetail.Merge(m, src)
}
func (m *ReplyTxTokennoteCashedDetail) XXX_Size() int {
	return xxx_messageInfo_ReplyTxTokennoteCashedDetail.Size(m)
}
func (m *ReplyTxTokennoteCashedDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyTxTokennoteCashedDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyTxTokennoteCashedDetail proto.InternalMessageInfo

func (m *ReplyTxTokennoteCashedDetail) GetDetail() *Tokennote {
	if m != nil {
		return m.Detail
	}
	return nil
}

type ReplyTokennoteCashed struct {
	List                 []*TokennoteHold `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReplyTokennoteCashed) Reset()         { *m = ReplyTokennoteCashed{} }
func (m *ReplyTokennoteCashed) String() string { return proto.CompactTextString(m) }
func (*ReplyTokennoteCashed) ProtoMessage()    {}
func (*ReplyTokennoteCashed) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{25}
}

func (m *ReplyTokennoteCashed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyTokennoteCashed.Unmarshal(m, b)
}
func (m *ReplyTokennoteCashed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyTokennoteCashed.Marshal(b, m, deterministic)
}
func (m *ReplyTokennoteCashed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyTokennoteCashed.Merge(m, src)
}
func (m *ReplyTokennoteCashed) XXX_Size() int {
	return xxx_messageInfo_ReplyTokennoteCashed.Size(m)
}
func (m *ReplyTokennoteCashed) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyTokennoteCashed.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyTokennoteCashed proto.InternalMessageInfo

func (m *ReplyTokennoteCashed) GetList() []*TokennoteHold {
	if m != nil {
		return m.List
	}
	return nil
}

type TokennoteCashedTx struct {
	Currency             string   `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Height               int64    `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Blocktime            int64    `protobuf:"varint,4,opt,name=blocktime,proto3" json:"blocktime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteCashedTx) Reset()         { *m = TokennoteCashedTx{} }
func (m *TokennoteCashedTx) String() string { return proto.CompactTextString(m) }
func (*TokennoteCashedTx) ProtoMessage()    {}
func (*TokennoteCashedTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{26}
}

func (m *TokennoteCashedTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteCashedTx.Unmarshal(m, b)
}
func (m *TokennoteCashedTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteCashedTx.Marshal(b, m, deterministic)
}
func (m *TokennoteCashedTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteCashedTx.Merge(m, src)
}
func (m *TokennoteCashedTx) XXX_Size() int {
	return xxx_messageInfo_TokennoteCashedTx.Size(m)
}
func (m *TokennoteCashedTx) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteCashedTx.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteCashedTx proto.InternalMessageInfo

func (m *TokennoteCashedTx) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *TokennoteCashedTx) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *TokennoteCashedTx) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TokennoteCashedTx) GetBlocktime() int64 {
	if m != nil {
		return m.Blocktime
	}
	return 0
}

type TokennoteContract struct {
	Tokennote            *Tokennote `protobuf:"bytes,1,opt,name=tokennote,proto3" json:"tokennote,omitempty"`
	BorrowHash           string     `protobuf:"bytes,2,opt,name=borrowHash,proto3" json:"borrowHash,omitempty"`
	LoanHash             string     `protobuf:"bytes,3,opt,name=loanHash,proto3" json:"loanHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TokennoteContract) Reset()         { *m = TokennoteContract{} }
func (m *TokennoteContract) String() string { return proto.CompactTextString(m) }
func (*TokennoteContract) ProtoMessage()    {}
func (*TokennoteContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{27}
}

func (m *TokennoteContract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteContract.Unmarshal(m, b)
}
func (m *TokennoteContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteContract.Marshal(b, m, deterministic)
}
func (m *TokennoteContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteContract.Merge(m, src)
}
func (m *TokennoteContract) XXX_Size() int {
	return xxx_messageInfo_TokennoteContract.Size(m)
}
func (m *TokennoteContract) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteContract.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteContract proto.InternalMessageInfo

func (m *TokennoteContract) GetTokennote() *Tokennote {
	if m != nil {
		return m.Tokennote
	}
	return nil
}

func (m *TokennoteContract) GetBorrowHash() string {
	if m != nil {
		return m.BorrowHash
	}
	return ""
}

func (m *TokennoteContract) GetLoanHash() string {
	if m != nil {
		return m.LoanHash
	}
	return ""
}

type TokennoteAddrTime struct {
	Currency             string   `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteAddrTime) Reset()         { *m = TokennoteAddrTime{} }
func (m *TokennoteAddrTime) String() string { return proto.CompactTextString(m) }
func (*TokennoteAddrTime) ProtoMessage()    {}
func (*TokennoteAddrTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{28}
}

func (m *TokennoteAddrTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteAddrTime.Unmarshal(m, b)
}
func (m *TokennoteAddrTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteAddrTime.Marshal(b, m, deterministic)
}
func (m *TokennoteAddrTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteAddrTime.Merge(m, src)
}
func (m *TokennoteAddrTime) XXX_Size() int {
	return xxx_messageInfo_TokennoteAddrTime.Size(m)
}
func (m *TokennoteAddrTime) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteAddrTime.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteAddrTime proto.InternalMessageInfo

func (m *TokennoteAddrTime) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *TokennoteAddrTime) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type ReqAddrTokennotes struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Token                []string `protobuf:"bytes,3,rep,name=token,proto3" json:"token,omitempty"`
	Direction            int32    `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`
	Count                int32    `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	FromKey              string   `protobuf:"bytes,6,opt,name=fromKey,proto3" json:"fromKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqAddrTokennotes) Reset()         { *m = ReqAddrTokennotes{} }
func (m *ReqAddrTokennotes) String() string { return proto.CompactTextString(m) }
func (*ReqAddrTokennotes) ProtoMessage()    {}
func (*ReqAddrTokennotes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{29}
}

func (m *ReqAddrTokennotes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqAddrTokennotes.Unmarshal(m, b)
}
func (m *ReqAddrTokennotes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqAddrTokennotes.Marshal(b, m, deterministic)
}
func (m *ReqAddrTokennotes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqAddrTokennotes.Merge(m, src)
}
func (m *ReqAddrTokennotes) XXX_Size() int {
	return xxx_messageInfo_ReqAddrTokennotes.Size(m)
}
func (m *ReqAddrTokennotes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqAddrTokennotes.DiscardUnknown(m)
}

var xxx_messageInfo_ReqAddrTokennotes proto.InternalMessageInfo

func (m *ReqAddrTokennotes) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqAddrTokennotes) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReqAddrTokennotes) GetToken() []string {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ReqAddrTokennotes) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *ReqAddrTokennotes) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqAddrTokennotes) GetFromKey() string {
	if m != nil {
		return m.FromKey
	}
	return ""
}

type ReqTokennoteTx struct {
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	//表示取所有/from/to/其他的hash列表
	Flag                 int32    `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Direction            int32    `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`
	Height               int64    `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Index                int64    `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
	Addr                 string   `protobuf:"bytes,7,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqTokennoteTx) Reset()         { *m = ReqTokennoteTx{} }
func (m *ReqTokennoteTx) String() string { return proto.CompactTextString(m) }
func (*ReqTokennoteTx) ProtoMessage()    {}
func (*ReqTokennoteTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{30}
}

func (m *ReqTokennoteTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTokennoteTx.Unmarshal(m, b)
}
func (m *ReqTokennoteTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTokennoteTx.Marshal(b, m, deterministic)
}
func (m *ReqTokennoteTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTokennoteTx.Merge(m, src)
}
func (m *ReqTokennoteTx) XXX_Size() int {
	return xxx_messageInfo_ReqTokennoteTx.Size(m)
}
func (m *ReqTokennoteTx) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTokennoteTx.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTokennoteTx proto.InternalMessageInfo

func (m *ReqTokennoteTx) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ReqTokennoteTx) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *ReqTokennoteTx) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqTokennoteTx) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *ReqTokennoteTx) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ReqTokennoteTx) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ReqTokennoteTx) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type TokennoteMarket struct {
	MarketList           []*Tokennote `protobuf:"bytes,1,rep,name=marketList,proto3" json:"marketList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TokennoteMarket) Reset()         { *m = TokennoteMarket{} }
func (m *TokennoteMarket) String() string { return proto.CompactTextString(m) }
func (*TokennoteMarket) ProtoMessage()    {}
func (*TokennoteMarket) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{31}
}

func (m *TokennoteMarket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteMarket.Unmarshal(m, b)
}
func (m *TokennoteMarket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteMarket.Marshal(b, m, deterministic)
}
func (m *TokennoteMarket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteMarket.Merge(m, src)
}
func (m *TokennoteMarket) XXX_Size() int {
	return xxx_messageInfo_TokennoteMarket.Size(m)
}
func (m *TokennoteMarket) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteMarket.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteMarket proto.InternalMessageInfo

func (m *TokennoteMarket) GetMarketList() []*Tokennote {
	if m != nil {
		return m.MarketList
	}
	return nil
}

type TokennoteAccountCredit struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	CreatedNotes         int64    `protobuf:"varint,2,opt,name=createdNotes,proto3" json:"createdNotes,omitempty"`
	RecvAmount           int64    `protobuf:"varint,3,opt,name=recvAmount,proto3" json:"recvAmount,omitempty"`
	SendAmount           int64    `protobuf:"varint,4,opt,name=sendAmount,proto3" json:"sendAmount,omitempty"`
	UsingAmount          int64    `protobuf:"varint,5,opt,name=usingAmount,proto3" json:"usingAmount,omitempty"`
	RepayAmount          int64    `protobuf:"varint,6,opt,name=repayAmount,proto3" json:"repayAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokennoteAccountCredit) Reset()         { *m = TokennoteAccountCredit{} }
func (m *TokennoteAccountCredit) String() string { return proto.CompactTextString(m) }
func (*TokennoteAccountCredit) ProtoMessage()    {}
func (*TokennoteAccountCredit) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a80dfcd2e4c7caf, []int{32}
}

func (m *TokennoteAccountCredit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokennoteAccountCredit.Unmarshal(m, b)
}
func (m *TokennoteAccountCredit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokennoteAccountCredit.Marshal(b, m, deterministic)
}
func (m *TokennoteAccountCredit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokennoteAccountCredit.Merge(m, src)
}
func (m *TokennoteAccountCredit) XXX_Size() int {
	return xxx_messageInfo_TokennoteAccountCredit.Size(m)
}
func (m *TokennoteAccountCredit) XXX_DiscardUnknown() {
	xxx_messageInfo_TokennoteAccountCredit.DiscardUnknown(m)
}

var xxx_messageInfo_TokennoteAccountCredit proto.InternalMessageInfo

func (m *TokennoteAccountCredit) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *TokennoteAccountCredit) GetCreatedNotes() int64 {
	if m != nil {
		return m.CreatedNotes
	}
	return 0
}

func (m *TokennoteAccountCredit) GetRecvAmount() int64 {
	if m != nil {
		return m.RecvAmount
	}
	return 0
}

func (m *TokennoteAccountCredit) GetSendAmount() int64 {
	if m != nil {
		return m.SendAmount
	}
	return 0
}

func (m *TokennoteAccountCredit) GetUsingAmount() int64 {
	if m != nil {
		return m.UsingAmount
	}
	return 0
}

func (m *TokennoteAccountCredit) GetRepayAmount() int64 {
	if m != nil {
		return m.RepayAmount
	}
	return 0
}

func init() {
	proto.RegisterType((*TokennoteAction)(nil), "types.TokennoteAction")
	proto.RegisterType((*TokennoteCreate)(nil), "types.TokennoteCreate")
	proto.RegisterType((*TokennoteLoanedReject)(nil), "types.TokennoteLoanedReject")
	proto.RegisterType((*TokennoteLoan)(nil), "types.TokennoteLoan")
	proto.RegisterType((*TokennoteLoanedAgree)(nil), "types.TokennoteLoanedAgree")
	proto.RegisterType((*TokennoteCashed)(nil), "types.TokennoteCashed")
	proto.RegisterType((*TokennoteMint)(nil), "types.TokennoteMint")
	proto.RegisterType((*TokennoteBurn)(nil), "types.TokennoteBurn")
	proto.RegisterType((*Tokennote)(nil), "types.Tokennote")
	proto.RegisterType((*TokennoteHold)(nil), "types.TokennoteHold")
	proto.RegisterType((*ReceiptTokennote)(nil), "types.ReceiptTokennote")
	proto.RegisterType((*ReceiptTokennoteCashed)(nil), "types.ReceiptTokennoteCashed")
	proto.RegisterType((*TokennoteCashDetail)(nil), "types.TokennoteCashDetail")
	proto.RegisterType((*LocalTokennote)(nil), "types.LocalTokennote")
	proto.RegisterType((*ReqTokennotes)(nil), "types.ReqTokennotes")
	proto.RegisterType((*ReplyTokennotes)(nil), "types.ReplyTokennotes")
	proto.RegisterType((*TokennoteRecv)(nil), "types.TokennoteRecv")
	proto.RegisterType((*ReplyAddrRecvForTokennotes)(nil), "types.ReplyAddrRecvForTokennotes")
	proto.RegisterType((*ReqTokennoteBalance)(nil), "types.ReqTokennoteBalance")
	proto.RegisterType((*ReqAccountTokennoteAssets)(nil), "types.ReqAccountTokennoteAssets")
	proto.RegisterType((*TokennoteAsset)(nil), "types.TokennoteAsset")
	proto.RegisterType((*ReplyAccountTokennoteAssets)(nil), "types.ReplyAccountTokennoteAssets")
	proto.RegisterType((*ReplyAccountTokennoteList)(nil), "types.ReplyAccountTokennoteList")
	proto.RegisterType((*ReplyTxTokennoteCashedList)(nil), "types.ReplyTxTokennoteCashedList")
	proto.RegisterType((*ReplyTxTokennoteCashedDetail)(nil), "types.ReplyTxTokennoteCashedDetail")
	proto.RegisterType((*ReplyTokennoteCashed)(nil), "types.ReplyTokennoteCashed")
	proto.RegisterType((*TokennoteCashedTx)(nil), "types.TokennoteCashedTx")
	proto.RegisterType((*TokennoteContract)(nil), "types.TokennoteContract")
	proto.RegisterType((*TokennoteAddrTime)(nil), "types.TokennoteAddrTime")
	proto.RegisterType((*ReqAddrTokennotes)(nil), "types.ReqAddrTokennotes")
	proto.RegisterType((*ReqTokennoteTx)(nil), "types.ReqTokennoteTx")
	proto.RegisterType((*TokennoteMarket)(nil), "types.TokennoteMarket")
	proto.RegisterType((*TokennoteAccountCredit)(nil), "types.TokennoteAccountCredit")
}

func init() { proto.RegisterFile("tokennote.proto", fileDescriptor_7a80dfcd2e4c7caf) }

var fileDescriptor_7a80dfcd2e4c7caf = []byte{
	// 1636 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xcd, 0x6e, 0xdb, 0xc6,
	0x13, 0x97, 0x28, 0xeb, 0x83, 0x63, 0x5b, 0x4e, 0x18, 0xc7, 0xe0, 0xdf, 0x31, 0x02, 0x63, 0xf1,
	0x47, 0x61, 0x14, 0xad, 0x11, 0x24, 0x40, 0x4f, 0x29, 0x12, 0xd9, 0x49, 0xa3, 0xb4, 0x76, 0x92,
	0x6e, 0x05, 0xb4, 0xe8, 0xa1, 0x28, 0x4d, 0x6e, 0x2c, 0xd6, 0x34, 0xd7, 0x59, 0xae, 0x6c, 0xeb,
	0xd4, 0x43, 0x1f, 0xa4, 0x87, 0xbe, 0x41, 0x9f, 0xa1, 0x40, 0xaf, 0x3d, 0xf4, 0xd6, 0xa7, 0xe8,
	0xad, 0xc7, 0x62, 0x3f, 0x48, 0xee, 0x52, 0x94, 0x94, 0xe4, 0xd0, 0x1b, 0x67, 0x76, 0x66, 0x76,
	0x76, 0x66, 0x7e, 0x33, 0xbb, 0x84, 0x0d, 0x4e, 0xcf, 0x48, 0x9a, 0x52, 0x4e, 0xf6, 0x2f, 0x18,
	0xe5, 0xd4, 0x6b, 0xf3, 0xe9, 0x05, 0xc9, 0xb6, 0x6f, 0x72, 0x16, 0xa4, 0x59, 0x10, 0xf2, 0x98,
	0xa6, 0x6a, 0x65, 0x7b, 0x3d, 0x08, 0x43, 0x3a, 0x49, 0xb9, 0x22, 0xd1, 0x3f, 0x6d, 0xd8, 0x18,
	0xe5, 0xca, 0x03, 0x29, 0xe8, 0x1d, 0x18, 0xf6, 0x0e, 0x19, 0x09, 0x38, 0xf1, 0x9b, 0xbb, 0xcd,
	0xbd, 0xd5, 0xfb, 0x5b, 0xfb, 0xd2, 0xec, 0xfe, 0xc8, 0x5e, 0x1d, 0x36, 0x70, 0x55, 0xc1, 0x7b,
	0x08, 0xeb, 0x05, 0xeb, 0x88, 0x06, 0xa9, 0xef, 0x48, 0x0b, 0x9b, 0x55, 0x0b, 0x62, 0x6d, 0xd8,
	0xc0, 0xb6, 0xb0, 0xf7, 0x25, 0x6c, 0x5a, 0x0c, 0x12, 0x0d, 0x4e, 0x19, 0x21, 0x7e, 0x4b, 0x1a,
	0xb9, 0x53, 0x67, 0x44, 0x8b, 0x0c, 0x1b, 0xb8, 0x56, 0xd5, 0x1b, 0xc1, 0xed, 0x0a, 0x1f, 0x93,
	0x1f, 0x48, 0xc8, 0xfd, 0x15, 0x69, 0x73, 0xa7, 0xde, 0xa6, 0x92, 0x19, 0x36, 0x70, 0xbd, 0xb2,
	0x1d, 0xaa, 0x20, 0x1b, 0x93, 0xc8, 0x6f, 0xcf, 0x09, 0x95, 0x5c, 0xb5, 0x43, 0x25, 0x59, 0xde,
	0x03, 0xe8, 0xc9, 0x34, 0xbd, 0x26, 0xcc, 0xef, 0x48, 0xe5, 0xdb, 0x5a, 0x79, 0x90, 0x65, 0x84,
	0x67, 0x23, 0xbd, 0x38, 0x6c, 0xe0, 0x42, 0x50, 0x28, 0x5d, 0xc5, 0x7c, 0x1c, 0xb1, 0xe0, 0xca,
	0xef, 0xd6, 0x28, 0x7d, 0xad, 0x17, 0x85, 0x52, 0x2e, 0xe8, 0x3d, 0x85, 0x7e, 0x6e, 0x60, 0x44,
	0x9f, 0x5e, 0x93, 0xd0, 0xef, 0x59, 0x01, 0xb5, 0xf7, 0x53, 0x22, 0xc3, 0x06, 0xae, 0x28, 0x79,
	0xf7, 0xa0, 0x7b, 0x4a, 0x52, 0x92, 0xc5, 0x99, 0xef, 0x5a, 0x59, 0x55, 0xfa, 0xcf, 0xd4, 0xda,
	0xb0, 0x81, 0x73, 0x31, 0xab, 0x1a, 0x8e, 0xe3, 0x94, 0xfb, 0x50, 0x5f, 0x0d, 0x62, 0xcd, 0xaa,
	0x06, 0xc1, 0xb0, 0xb4, 0x0f, 0x26, 0x2c, 0xf5, 0x57, 0xeb, 0xb5, 0xc5, 0x9a, 0xa5, 0x2d, 0x18,
	0x5e, 0x1f, 0x9c, 0xd1, 0xd4, 0x0f, 0x77, 0x9b, 0x7b, 0x6d, 0xec, 0x8c, 0xa6, 0x07, 0x5d, 0x68,
	0x5f, 0x06, 0xc9, 0x84, 0xa0, 0xbf, 0x1c, 0xa3, 0xf4, 0x75, 0xd9, 0x6e, 0x41, 0x27, 0xce, 0xb2,
	0x09, 0x61, 0xb2, 0xe2, 0x5d, 0xac, 0x29, 0xef, 0x2e, 0x80, 0xfa, 0x7a, 0x11, 0x9c, 0x13, 0x59,
	0xcb, 0x2e, 0x36, 0x38, 0xde, 0x2e, 0xac, 0x2a, 0xea, 0xd5, 0x98, 0xa6, 0xaa, 0x4e, 0x5d, 0x6c,
	0xb2, 0xbc, 0x6d, 0xe8, 0x29, 0xf2, 0x79, 0x24, 0x4b, 0xce, 0xc5, 0x05, 0x2d, 0xd6, 0x82, 0x30,
	0x24, 0x17, 0x9c, 0x32, 0x59, 0x3e, 0x2e, 0x2e, 0x68, 0xcf, 0x87, 0xee, 0x49, 0x90, 0x04, 0x69,
	0x48, 0x64, 0x71, 0xb4, 0x70, 0x4e, 0x0a, 0xad, 0x70, 0xc2, 0x18, 0x49, 0xc3, 0xa9, 0x2c, 0x01,
	0x17, 0x17, 0xb4, 0xf7, 0x01, 0xf4, 0x95, 0x05, 0x21, 0xf9, 0x44, 0x20, 0xb8, 0x27, 0x95, 0x2b,
	0x5c, 0xcf, 0x83, 0x15, 0x26, 0x56, 0x5d, 0xb9, 0x2a, 0xbf, 0x3d, 0x04, 0x6b, 0x71, 0xca, 0x19,
	0x8d, 0x26, 0xb2, 0x1d, 0xc8, 0x5c, 0xb9, 0xd8, 0xe2, 0x89, 0xf3, 0x32, 0x72, 0x11, 0x4c, 0x83,
	0x73, 0xd1, 0x4b, 0x64, 0x42, 0x5a, 0xd8, 0x64, 0xa1, 0x00, 0x6e, 0xd7, 0x62, 0x49, 0x84, 0x38,
	0x9b, 0x9e, 0x9f, 0xd0, 0x24, 0x0f, 0xb1, 0xa2, 0xbc, 0x4d, 0x68, 0xd3, 0xab, 0x94, 0x30, 0x1d,
	0x5d, 0x45, 0x88, 0x43, 0x26, 0x34, 0x48, 0x47, 0xf1, 0xb9, 0x8a, 0x6a, 0x0b, 0x17, 0x34, 0x7a,
	0x09, 0xeb, 0xd6, 0x16, 0x73, 0x4d, 0xf7, 0xc1, 0xe1, 0x54, 0xdb, 0x75, 0x38, 0x15, 0x72, 0xda,
	0x71, 0x65, 0x52, 0x53, 0xe8, 0x7b, 0xd8, 0xac, 0xeb, 0x29, 0xef, 0xe7, 0x32, 0xaf, 0xb8, 0x2c,
	0x68, 0xf4, 0xa9, 0x59, 0x72, 0x0a, 0xfe, 0xf3, 0x8c, 0x7b, 0xb0, 0x12, 0x06, 0xd9, 0x58, 0xda,
	0x6e, 0x61, 0xf9, 0x8d, 0x1e, 0x19, 0x27, 0x96, 0xd0, 0x98, 0xa7, 0x5c, 0x9e, 0xd0, 0xb1, 0x4e,
	0x68, 0x1a, 0x90, 0xe8, 0x78, 0x57, 0x03, 0x7f, 0xb7, 0xc0, 0x2d, 0x2c, 0xcc, 0x85, 0x8b, 0x59,
	0xd0, 0x4e, 0xa5, 0xa0, 0x37, 0xa1, 0xcd, 0x29, 0x0f, 0x12, 0x1d, 0x1b, 0x45, 0x98, 0x65, 0xbe,
	0x62, 0x97, 0x79, 0xa5, 0xd4, 0xda, 0x33, 0xa5, 0x66, 0x01, 0xa1, 0xb3, 0x14, 0x08, 0xdd, 0x85,
	0x40, 0xe8, 0x19, 0x40, 0xb0, 0x41, 0xef, 0x2e, 0x03, 0x3d, 0x2c, 0x06, 0xfd, 0x6a, 0x05, 0xf4,
	0x55, 0x98, 0xad, 0xd5, 0xc0, 0x4c, 0x64, 0x87, 0x07, 0x7c, 0x92, 0xf9, 0xeb, 0xb2, 0x7f, 0x69,
	0xca, 0xfb, 0x10, 0xda, 0x63, 0x9a, 0x44, 0x99, 0xdf, 0xdf, 0x6d, 0xd5, 0x75, 0xc2, 0x21, 0x4d,
	0x22, 0xac, 0x44, 0xc4, 0x29, 0x42, 0xd9, 0xdc, 0x24, 0x86, 0x36, 0xe4, 0xf9, 0x0c, 0x8e, 0x38,
	0x05, 0xbd, 0x24, 0x2c, 0x9a, 0x10, 0x2c, 0x02, 0x70, 0x43, 0xc5, 0xd7, 0x60, 0xa1, 0xdf, 0x9b,
	0x46, 0xd5, 0x08, 0xd3, 0x22, 0x5a, 0x41, 0x14, 0xe5, 0x59, 0x97, 0xdf, 0x56, 0x16, 0x9c, 0x4a,
	0x16, 0xe6, 0x00, 0xae, 0x9a, 0xdb, 0x95, 0xda, 0xdc, 0x16, 0xf8, 0x6f, 0xdb, 0xf8, 0x37, 0xa2,
	0xd3, 0xb1, 0xa2, 0xe3, 0x43, 0x57, 0x9e, 0x8f, 0x32, 0xdd, 0x17, 0x73, 0x12, 0x7d, 0x03, 0x37,
	0x30, 0x09, 0x49, 0x7c, 0xc1, 0xad, 0x1a, 0x7e, 0x07, 0x70, 0x97, 0x7b, 0xb6, 0xcc, 0x3d, 0xd1,
	0x2b, 0xd8, 0xaa, 0x5a, 0xd6, 0xf8, 0xfe, 0x04, 0x7a, 0x02, 0xbb, 0x49, 0x9c, 0x71, 0xbf, 0x29,
	0xd3, 0xb5, 0x5d, 0x77, 0x37, 0x78, 0x42, 0x78, 0x10, 0x27, 0xb8, 0x90, 0x45, 0x3f, 0x37, 0xe1,
	0x56, 0x8d, 0x84, 0x15, 0xe7, 0x66, 0x25, 0xce, 0x79, 0x5e, 0x1c, 0x23, 0x2f, 0xf3, 0x62, 0xbf,
	0x05, 0x9d, 0x31, 0x89, 0x4f, 0xc7, 0x79, 0xd8, 0x35, 0x25, 0x6c, 0xf0, 0x32, 0xda, 0xf2, 0x5b,
	0xc4, 0x22, 0x4e, 0x23, 0x72, 0xad, 0x47, 0x90, 0x22, 0xd0, 0x1f, 0x2d, 0xe8, 0x1f, 0xd1, 0x30,
	0x48, 0xfe, 0xdb, 0x86, 0x60, 0x06, 0xa0, 0xbd, 0x14, 0xee, 0x9d, 0x85, 0x70, 0xef, 0xce, 0x85,
	0x7b, 0x6f, 0x19, 0xdc, 0xdd, 0xc5, 0x70, 0x87, 0x25, 0x70, 0x5f, 0x5d, 0x08, 0xf7, 0x35, 0xab,
	0xa0, 0xff, 0x0f, 0xeb, 0x0a, 0xb0, 0xd1, 0x50, 0x65, 0x6c, 0x5d, 0xba, 0x6d, 0x33, 0x85, 0x7f,
	0x9a, 0x21, 0xd1, 0xd2, 0x57, 0x60, 0x32, 0x58, 0x55, 0xa8, 0x6f, 0xcc, 0x42, 0xfd, 0xa7, 0x26,
	0xac, 0x63, 0xf2, 0xa6, 0x48, 0x68, 0x26, 0xce, 0xf4, 0x66, 0x42, 0xd8, 0x74, 0x90, 0x28, 0x80,
	0xf4, 0x70, 0x41, 0x1b, 0xfe, 0x3a, 0x96, 0xbf, 0x77, 0x01, 0x8a, 0x3b, 0x98, 0x00, 0x4a, 0x4b,
	0x44, 0xb2, 0xe4, 0x88, 0x75, 0x05, 0xb2, 0x97, 0x69, 0x32, 0x95, 0xe9, 0xed, 0x61, 0x83, 0x83,
	0x1e, 0xc3, 0x06, 0x26, 0x17, 0xc9, 0xd4, 0x70, 0xe3, 0x63, 0xe8, 0x48, 0x03, 0x99, 0xc6, 0x50,
	0x7e, 0xdb, 0xb5, 0xeb, 0x0f, 0x6b, 0x21, 0x34, 0x30, 0x3a, 0x16, 0x26, 0xe1, 0xa5, 0xb7, 0x03,
	0x6e, 0xe1, 0x80, 0xae, 0xcd, 0x92, 0x21, 0xcb, 0x81, 0x84, 0x97, 0xf9, 0xac, 0x15, 0xdf, 0xe8,
	0x5b, 0xd8, 0x96, 0x4e, 0x0c, 0xa2, 0x88, 0x09, 0x13, 0x9f, 0x51, 0x66, 0xf8, 0xf3, 0x10, 0xfa,
	0xdc, 0xdc, 0x20, 0xf7, 0x6b, 0xa6, 0x15, 0x8b, 0x45, 0x5c, 0x91, 0x45, 0x13, 0xb8, 0x65, 0x46,
	0xf9, 0x40, 0x57, 0xf6, 0x0e, 0xb8, 0x02, 0xb2, 0x24, 0xcb, 0x88, 0xb2, 0xe7, 0xe2, 0x92, 0xe1,
	0xed, 0x19, 0x6f, 0x8d, 0xaf, 0x54, 0xc7, 0x52, 0x50, 0xaa, 0xb2, 0x45, 0x5e, 0xc8, 0x35, 0x09,
	0x09, 0xd3, 0x17, 0x51, 0x4d, 0xa1, 0x63, 0xf8, 0x1f, 0x26, 0x6f, 0x06, 0xea, 0x01, 0x58, 0xbe,
	0xfa, 0xe4, 0xad, 0x5d, 0x00, 0x4e, 0xef, 0xa5, 0xe3, 0x93, 0x93, 0x86, 0x39, 0xc7, 0x32, 0xf7,
	0x9b, 0x03, 0x7d, 0xdb, 0xca, 0xdc, 0x66, 0x6a, 0xb4, 0x64, 0xc7, 0x6a, 0xc9, 0xde, 0x1e, 0x74,
	0xf5, 0x8b, 0x54, 0xbf, 0xee, 0xfa, 0xf9, 0x63, 0x42, 0x71, 0x71, 0xbe, 0x2c, 0x10, 0x94, 0xc5,
	0xe9, 0x69, 0x42, 0x06, 0xe6, 0xb4, 0xb0, 0x78, 0xa2, 0x97, 0xc8, 0xe9, 0xa1, 0xbb, 0x97, 0x22,
	0xde, 0xba, 0x2b, 0xd8, 0x1d, 0xa0, 0xbb, 0xac, 0x03, 0xf4, 0x6a, 0x3b, 0x40, 0x31, 0xae, 0xdc,
	0xb9, 0xe3, 0x0a, 0xac, 0xd1, 0xf1, 0x1d, 0xdc, 0x51, 0x85, 0x56, 0x9f, 0x97, 0x47, 0x46, 0xda,
	0x15, 0xab, 0x02, 0x01, 0x5b, 0x01, 0x57, 0xa5, 0xd1, 0x73, 0x91, 0xf5, 0x1a, 0xfb, 0x47, 0x71,
	0xc6, 0xbd, 0x8f, 0x60, 0xc5, 0x98, 0x4c, 0xfe, 0x8c, 0xc9, 0x28, 0x62, 0xc2, 0x79, 0x2c, 0xa5,
	0xd0, 0xe7, 0x1a, 0x13, 0xa3, 0xeb, 0xca, 0x94, 0x7b, 0x1b, 0x5b, 0x4a, 0x72, 0x74, 0xad, 0x6d,
	0x0d, 0x61, 0xa7, 0xde, 0x96, 0x9e, 0x73, 0x7b, 0xd0, 0x89, 0xe4, 0x97, 0xfe, 0xf9, 0x70, 0x63,
	0x06, 0x59, 0x7a, 0x1d, 0x3d, 0x86, 0x4d, 0xbb, 0x5d, 0xe8, 0xc9, 0xbb, 0x67, 0xf9, 0x53, 0x7f,
	0x49, 0x52, 0xbe, 0x4c, 0xe1, 0xe6, 0x8c, 0x9b, 0xef, 0x33, 0x68, 0xf5, 0x40, 0x6d, 0x59, 0x03,
	0x75, 0x07, 0xdc, 0x93, 0x84, 0x86, 0x67, 0x72, 0xaa, 0xaa, 0xa2, 0x2d, 0x19, 0xe8, 0x47, 0x73,
	0x6b, 0x9a, 0x72, 0x16, 0x84, 0xdc, 0xdb, 0xaf, 0x76, 0xab, 0xba, 0xe3, 0x1b, 0xfd, 0xeb, 0x2e,
	0xc0, 0x09, 0x65, 0x8c, 0x5e, 0x0d, 0xf3, 0x17, 0x83, 0x8b, 0x0d, 0x4e, 0x5e, 0x96, 0x72, 0x55,
	0xb5, 0x84, 0x82, 0x46, 0x87, 0x86, 0x03, 0x79, 0xba, 0x97, 0x9d, 0x5d, 0x1e, 0xc5, 0x29, 0x2f,
	0x08, 0xe8, 0x97, 0x26, 0xdc, 0x14, 0xad, 0x45, 0xe8, 0x97, 0x4d, 0xb2, 0xee, 0x9a, 0x38, 0x6f,
	0x66, 0xc8, 0x5b, 0xc0, 0x19, 0x49, 0xf5, 0xb8, 0x50, 0x84, 0x88, 0x5d, 0x14, 0x33, 0xa2, 0x46,
	0xe6, 0x8a, 0x54, 0x28, 0x19, 0x42, 0x27, 0x2c, 0x1e, 0x05, 0x6d, 0xac, 0x08, 0xd1, 0x6b, 0x5e,
	0x33, 0x7a, 0xfe, 0x05, 0xc9, 0x5f, 0x03, 0x39, 0x89, 0x7e, 0x6d, 0x42, 0xdf, 0xec, 0xbb, 0xa3,
	0xeb, 0x45, 0xaf, 0xaf, 0xd7, 0x49, 0x70, 0xaa, 0x9d, 0x94, 0xdf, 0xe5, 0x76, 0x2d, 0x73, 0xbb,
	0xc5, 0x2e, 0x96, 0x45, 0xd1, 0xb6, 0x8a, 0xa2, 0xf6, 0x46, 0x55, 0x04, 0xac, 0x5b, 0x06, 0x0c,
	0x1d, 0x1a, 0x4f, 0xc6, 0xe3, 0x80, 0x9d, 0x11, 0xee, 0xdd, 0x03, 0x38, 0x97, 0x5f, 0x47, 0x65,
	0x79, 0xcf, 0xd6, 0x87, 0x21, 0x83, 0xfe, 0x6c, 0xc2, 0x96, 0xf1, 0x9b, 0x4f, 0x7a, 0x7e, 0xc8,
	0x48, 0x14, 0xf3, 0xda, 0x24, 0x21, 0x58, 0xd3, 0xf7, 0x86, 0x17, 0x72, 0x84, 0xab, 0x54, 0x5b,
	0x3c, 0x51, 0x73, 0x62, 0x4e, 0x0e, 0xcc, 0xbb, 0xa5, 0xc1, 0x91, 0x43, 0x9e, 0xa4, 0x91, 0xd5,
	0xac, 0x0d, 0x8e, 0x68, 0xa6, 0x13, 0xd1, 0xbb, 0x07, 0xd6, 0xbb, 0xce, 0x60, 0x15, 0xaf, 0x03,
	0x2d, 0xd1, 0x31, 0x5e, 0x07, 0x8a, 0x75, 0xff, 0xd8, 0xc0, 0x89, 0xf7, 0x18, 0x36, 0x9e, 0x11,
	0xd5, 0xde, 0xf2, 0x81, 0x9a, 0xdf, 0xb4, 0x6b, 0x86, 0xed, 0xf6, 0x86, 0x3d, 0x67, 0x32, 0xd4,
	0x38, 0xe9, 0xc8, 0x7f, 0xa2, 0x0f, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xf4, 0xc8, 0x0a, 0x47,
	0x4f, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TokennoteClient is the client API for Tokennote service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TokennoteClient interface {
	// token 对外提供服务的接口
	//区块链接口
	GetTokenBalance(ctx context.Context, in *ReqTokennoteBalance, opts ...grpc.CallOption) (*types.Accounts, error)
}

type tokennoteClient struct {
	cc *grpc.ClientConn
}

func NewTokennoteClient(cc *grpc.ClientConn) TokennoteClient {
	return &tokennoteClient{cc}
}

func (c *tokennoteClient) GetTokenBalance(ctx context.Context, in *ReqTokennoteBalance, opts ...grpc.CallOption) (*types.Accounts, error) {
	out := new(types.Accounts)
	err := c.cc.Invoke(ctx, "/types.tokennote/GetTokenBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TokennoteServer is the server API for Tokennote service.
type TokennoteServer interface {
	// token 对外提供服务的接口
	//区块链接口
	GetTokenBalance(context.Context, *ReqTokennoteBalance) (*types.Accounts, error)
}

func RegisterTokennoteServer(s *grpc.Server, srv TokennoteServer) {
	s.RegisterService(&_Tokennote_serviceDesc, srv)
}

func _Tokennote_GetTokenBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTokennoteBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokennoteServer).GetTokenBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.tokennote/GetTokenBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokennoteServer).GetTokenBalance(ctx, req.(*ReqTokennoteBalance))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tokennote_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.tokennote",
	HandlerType: (*TokennoteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTokenBalance",
			Handler:    _Tokennote_GetTokenBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tokennote.proto",
}
